{"version":3,"sources":["../src/datasource.js"],"names":["_","axios","GenericDatasource","instanceSettings","$q","backendSrv","templateSrv","type","url","name","q","withCredentials","headers","basicAuth","length","console","log","jsonData","appiot","appiotaccesstoken","appiotdevicenetwork","resourceList","getAllResourceUrlFromDevice","then","result","catch","err","rweflag","deviceidentifier","split","objecttypeid","Promise","resolve","reject","apiURI","get","apiHeaders","data","Rows","Id","promiseArray","SmartObjects","forEach","obj","TypeId","promise","push","all","spread","args","i","resource","AccessType","error","message","lat","lon","precision","Geohash","base32","decode","geohash","bounds","latMin","sw","lonMin","latMax","ne","lonMax","toFixed","Math","floor","LN10","Number","p","hash","GeohashEncode","posn","isNaN","Error","idx","bit","evenBit","lonMid","latMid","charAt","options","query","buildQueryParameters","targets","filter","t","hide","when","caller","req","target","indexOf","targetresource","find","Name","from","Date","range","getTime","to","tsResultArray","tsResult","config","targettype","columns","col1","text","sort","desc","col2","col3","col4","col5","rows","v","value","part","sv","row","UnixTimestamp","geoh","toISOString","AggregationType","col","m","bv","datapoints","arr","val","status","title","calleroption","eventcategoryname","annotation","event","time","CreatedDateTime","EventCategoryName","toUpperCase","ann","enabled","datasource","showLine","RuleName","ResetDateTime","tags","list","mapToTextValue","map","d","isObject","datasourceRequest","replace","scopedVars","refId"],"mappings":"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","file":"datasource.js","sourcesContent":["import _ from \"lodash\";\nimport * as axios from \"./node_modules/axios/dist/axios\";\n\n\nexport class GenericDatasource {\n\n\n\n  constructor(instanceSettings, $q, backendSrv, templateSrv) {\n   /* this.geolocationv = []\n    for (var i = 0; i < 50; i++) {\n      var a = {}\n      a.UnixTimestamp = (new Date().getTime()) - Math.random() * 600000;\n      var b = '22.288702,114.211625,30'\n      var bp = b.split(',')\n      bp[0] = Number(bp[0]) - Math.random() * 0.002\n      bp[1] = Number(bp[1]) - Math.random() * 0.003\n      bp[2] = Math.floor(Number(bp[2]) + Math.random() * 20)\n      a.sv = bp[0] + ',' + bp[1] + ',' + bp[2]\n      this.geolocationv.push(a)\n    }*/\n    this.type = instanceSettings.type;\n    this.url = instanceSettings.url;\n    this.name = instanceSettings.name;\n    this.q = $q;\n    this.backendSrv = backendSrv;\n    this.templateSrv = templateSrv;\n    this.withCredentials = instanceSettings.withCredentials;\n    this.headers = { 'Content-Type': 'application/json' };\n    if (typeof instanceSettings.basicAuth === 'string' && instanceSettings.basicAuth.length > 0) {\n      this.headers['Authorization'] = instanceSettings.basicAuth;\n    }\n    console.log(instanceSettings.jsonData)\n    this.appiot = {\n      //'apiURI': 'https://iotabusinesslab-api.sensbysigma.com/api/v3',\n      'apiURI': instanceSettings.url,\n      'apiHeaders': {\n        'Authorization': instanceSettings.jsonData.appiotaccesstoken,\n        'X-DeviceNetwork': instanceSettings.jsonData.appiotdevicenetwork,\n        //'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJkbklkIjoiMDAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAwIiwicGVybWlzc2lvbnMiOm51bGwsImlzcyI6ImFwcGlvdHdlYmFwaSIsImF1ZCI6ImFwcGlvdHdlYmFwaSIsImV4cCI6MTUxNTkzMzM1MywibmJmIjoxNTA4NTA4OTEwLCJpYXQiOjE1MDg1MDg5MTAsIm5hbWUiOiJCTEFCSEsiLCJ0b2tlblR5cGUiOiJhY2Nlc3NUb2tlbiIsInVzZXJJZCI6IjAwMDAwMDAwLTAwMDAtMDAwMC0wMDAwLTAwMDAwMDAwMDAwMCJ9.E0xhLJjh+tEO2w7Tvtx+sco6h8WlWN2nVSGHpTKkn0Q=',\n        //'X-DeviceNetwork': '613b7124-e2db-4e76-9feb-102a869bd497',\n        'Content-Type': 'application/json',\n      },\n    }\n\n    this.resourceList = null;\n    this.getAllResourceUrlFromDevice(1)\n      .then((result) => {\n        this.resourceList = result;\n        /*var resource = this.resourceList.find(resource => {\n          return resource.Name == \"BleSensor\"\n        })*/\n        console.log(this.resourceList.length)\n      })\n      .catch((err) => {\n        console.log(err)\n      })\n\n  }\n\n\n  getAllResourceUrlFromDevice(rweflag) { // objecttypeid is the lwm2m object id in the resourceurl e.g. 3303      \n    const deviceidentifier = this.name.split(\"/\")[0]\n    const objecttypeid = this.name.split(\"/\")[1]\n    const appiot = this.appiot\n    return new Promise(function (resolve, reject) {\n      let url = `${appiot.apiURI}/devices?filter[0].Key=deviceidentifier&filter[0].Value=${deviceidentifier}`\n      axios.get(url, { 'headers': appiot.apiHeaders })\n        .then((result) => {\n          if (result.data.Rows.length > 0) {\n            let resourceList = [];\n            let url = `${appiot.apiURI}/devices/${result.data.Rows[0].Id}`;\n            axios.get(url, { 'headers': appiot.apiHeaders })\n              .then((result) => {\n                let promiseArray = [];\n                result.data.SmartObjects.forEach((obj) => {\n                  if (obj.TypeId == objecttypeid) {\n                    url = `${appiot.apiURI}/resources?filter[0].Key=smartobjectid&filter[0].Value=${obj.Id}`;\n                    let promise = axios.get(url, { 'headers': appiot.apiHeaders })\n                    promiseArray.push(promise)\n                  }\n                })\n                if (promiseArray.length == 0) {\n                  reject(`Cannot found matching object type id?: ${objecttypeid}`);\n                }\n                // perform concurrent get calls for all smart objects                       \n                axios.all(promiseArray)\n                  .then(axios.spread((...args) => {\n                    for (let i = 0; i < args.length; i++) {\n                      args[i].data.Rows.forEach((resource) => { // resource obj\n                        if ((resource.AccessType & rweflag) > 0) { // required bitand with flag\n                          resourceList.push(resource)\n                        }\n                      })\n                    }\n                    if (resourceList.length == 0) {\n                      reject(`Cannot found matching AccessType?: ${rweflag}`);\n                    }\n                    resolve(resourceList)\n                  }))\n                  .catch((error) => {\n                    console.log(error);\n                    reject(`error getting /resources?: ${error.message}`);\n                  })\n              })\n              .catch((error) => {\n                console.log(error);\n                reject(`error getting /devices/id: ${error.message}`);\n              })\n          } else {\n            reject(`deviceidentifier not found: ${error.message}`);\n          }\n        })\n        .catch((error) => {\n          console.log(error);\n          reject(`error getting deviceidentifier: ${error.message}`);\n        })\n    })\n  }\n\n\n\n  GeohashEncode(lat, lon, precision) {\n    var Geohash = {};\n    /* (Geohash-specific) Base32 map */\n    Geohash.base32 = '0123456789bcdefghjkmnpqrstuvwxyz';\n    Geohash.decode = function (geohash) {\n\n      var bounds = Geohash.bounds(geohash); // <-- the hard work\n      // now just determine the centre of the cell...\n\n      var latMin = bounds.sw.lat, lonMin = bounds.sw.lon;\n      var latMax = bounds.ne.lat, lonMax = bounds.ne.lon;\n\n      // cell centre\n      var lat = (latMin + latMax) / 2;\n      var lon = (lonMin + lonMax) / 2;\n\n      // round to close to centre without excessive precision: ⌊2-log10(Δ°)⌋ decimal places\n      lat = lat.toFixed(Math.floor(2 - Math.log(latMax - latMin) / Math.LN10));\n      lon = lon.toFixed(Math.floor(2 - Math.log(lonMax - lonMin) / Math.LN10));\n\n      return { lat: Number(lat), lon: Number(lon) };\n    };\n\n    // infer precision?\n    if (typeof precision == 'undefined') {\n      // refine geohash until it matches precision of supplied lat/lon\n      for (var p = 1; p <= 12; p++) {\n        var hash = this.GeohashEncode(lat, lon, p);\n        var posn = Geohash.decode(hash);\n        if (posn.lat == lat && posn.lon == lon) return hash;\n      }\n      precision = 12; // set to maximum\n    }\n\n    lat = Number(lat);\n    lon = Number(lon);\n    precision = Number(precision);\n\n    if (isNaN(lat) || isNaN(lon) || isNaN(precision)) throw new Error('Invalid geohash');\n\n    var idx = 0; // index into base32 map\n    var bit = 0; // each char holds 5 bits\n    var evenBit = true;\n    var geohash = '';\n\n    var latMin = -90, latMax = 90;\n    var lonMin = -180, lonMax = 180;\n\n    while (geohash.length < precision) {\n      if (evenBit) {\n        // bisect E-W longitude\n        var lonMid = (lonMin + lonMax) / 2;\n        if (lon >= lonMid) {\n          idx = idx * 2 + 1;\n          lonMin = lonMid;\n        } else {\n          idx = idx * 2;\n          lonMax = lonMid;\n        }\n      } else {\n        // bisect N-S latitude\n        var latMid = (latMin + latMax) / 2;\n        if (lat >= latMid) {\n          idx = idx * 2 + 1;\n          latMin = latMid;\n        } else {\n          idx = idx * 2;\n          latMax = latMid;\n        }\n      }\n      evenBit = !evenBit;\n\n      if (++bit == 5) {\n        // 5 bits gives us a character: append it and start over\n        geohash += Geohash.base32.charAt(idx);\n        bit = 0;\n        idx = 0;\n      }\n    }\n\n    return geohash;\n  };\n\n  query(options) {\n    var query = this.buildQueryParameters(options);\n    query.targets = query.targets.filter(t => !t.hide);\n\n    if (query.targets.length <= 0) {\n      return this.q.when({ data: [] });\n    }\n\n    /*return this.doRequest({\n      url: this.url + '/query',\n      data: query,\n      method: 'POST'\n    });*/\n    const caller = this\n    const req = query\n    return new Promise(function (resolve, reject) {\n\n      let promiseArray = [];\n      req.targets.forEach((target) => {\n        var resource = null;\n        if(target.target.indexOf('TimeWeightedAverage')>=0 || target.target.indexOf('Variance')>=0) {          \n          var targetresource = target.target.split(',')[0]\n          resource = caller.resourceList.find(resource => {\n            return resource.Name == targetresource\n          })\n        }\n        else {\n          resource = caller.resourceList.find(resource => {\n            return resource.Name == target.target\n          })\n        }\n        var from = new Date(req.range.from).getTime();\n        var to = new Date(req.range.to).getTime();\n        var url = null;\n        if(target.target.indexOf('TimeWeightedAverage')>=0) {          \n          url = `${caller.appiot.apiURI}/measurements/${resource.Id}/aggregations?measurementQuery.resolution=300000&measurementQuery.timespanStart=${from}&measurementQuery.timespanEnd=${to}&measurementQuery.aggregationType=TimeWeightedAverage`;                      \n        }\n        else if(target.target.indexOf('Variance')>=0) {          \n          url = `${caller.appiot.apiURI}/measurements/${resource.Id}/aggregations?measurementQuery.resolution=300000&measurementQuery.timespanStart=${from}&measurementQuery.timespanEnd=${to}&measurementQuery.aggregationType=TimeWeightedAverage`;                      \n        }\n        else {\n          url = `${caller.appiot.apiURI}/measurements/${resource.Id}/since/${from}/to/${to}`;\n        }        \n        let promise = axios.get(url, { 'headers': caller.appiot.apiHeaders, 'target': target.target, 'targettype': target.type }).catch((err) => { console.log(err) })\n        promiseArray.push(promise)\n      })\n      var tsResultArray = [];\n      // perform concurrent get calls for all smart objects                       \n      axios.all(promiseArray)\n        .then(axios.spread((...args) => {\n          for (let i = 0; i < args.length; i++) {\n            var tsResult = {}\n            if (args[i] == null) {\n              continue;\n            }\n\n            if (args[i].config.targettype == 'table') {\n              if (args[i].config.target == 'GeoLocation') {\n                tsResult.columns = []\n                var col1 = {}\n                col1.text = 'Time'\n                col1.type = 'time'\n                col1.sort = true,\n                  col1.desc = true,\n                  tsResult.columns.push(col1)\n                var col2 = {}\n                col2.text = 'sv'\n                col2.type = 'string'\n                tsResult.columns.push(col2)\n                var col3 = {}\n                col3.text = 'metric'\n                col3.type = 'string'\n                tsResult.columns.push(col3)\n                var col4 = {}\n                col4.text = 'geohash'\n                col4.type = 'string'\n                tsResult.columns.push(col4)\n                var col5 = {}\n                col5.text = 'timestr'\n                col5.type = 'string'\n                tsResult.columns.push(col5)\n                tsResult.rows = []\n                tsResult.type = 'table'\n              \n                args[i].data.v.forEach((value) => { // resource obj\n\n                //caller.geolocationv.forEach((value) => { // resource obj\n                  var part = value.sv.split(\",\")\n                  if (part.length <3) {\n                    \n                  }\n                  else {\n                    var row = []\n                    row.push(value.UnixTimestamp)\n                    row.push(value.sv)                  \n                    row.push(part[2])\n                    var lat = Number(part[0]);// - Math.random() * 0.002\n                    var lon = Number(part[1]);// - Math.random() * 0.003\n                    var geoh = caller.GeohashEncode(lat,lon,9)\n                    row.push(geoh)\n                    row.push(new Date(value.UnixTimestamp).toISOString())\n                    tsResult.rows.push(row)\n                  }\n                })\n              }\n              else {\n                if(args[i].data.AggregationType !=null){\n                  tsResult.columns = []\n                  var col1 = {}\n                  col1.text = 'Time'\n                  col1.type = 'time'\n                  col1.sort = true,\n                  col1.desc = true,\n                   tsResult.columns.push(col1)\n                  var col = {}\n                  col.text = 'm'\n                  col.type = 'number'\n                  tsResult.columns.push(col)\n                  tsResult.rows = []\n                  tsResult.type = 'table'\n                  args[i].data.v.forEach((value) => { // resource obj\n                    var row = []\n                    row.push(value.t)\n                    row.push(value.m)                    \n                    tsResult.rows.push(row)\n                  })\n                }\n                else {\n                  tsResult.columns = []\n                  var col1 = {}\n                  col1.text = 'Time'\n                  col1.type = 'time'\n                  col1.sort = true,\n                    col1.desc = true,\n                    tsResult.columns.push(col1)\n                  var col = {}\n                  col.text = 'v'\n                  col.type = 'number'\n                  tsResult.columns.push(col)\n                  col.text = 'sv'\n                  col.type = 'string'\n                  tsResult.columns.push(col)\n                  col.text = 'bv'\n                  col.type = 'boolean'\n                  tsResult.columns.push(col)\n                  tsResult.rows = []\n                  tsResult.type = 'table'\n                  args[i].data.v.forEach((value) => { // resource obj\n                    var row = []\n                    row.push(value.UnixTimestamp)\n                    row.push(value.v)\n                    row.push(value.sv)\n                    row.push(value.bv)\n                    tsResult.rows.push(row)\n                  })\n                }\n              }\n            }\n            else {\n              tsResult.target = args[i].config.target\n              tsResult.datapoints = []\n              if(args[i].data.AggregationType !=null){\n                //this is aggregation\n                args[i].data.v.forEach((value) => { // resource obj\n                  var arr = []                                    \n                  arr.push(value.m)\n                  arr.push(value.t)\n                  tsResult.datapoints.push(arr)\n                })\n              }\n              else {\n                args[i].data.v.forEach((value) => { // resource obj\n                  var arr = []\n                  var val = 0\n                  if (value.v != null) {\n                    val = value.v\n                  }\n                  else if (value.sv != null) {\n                    val = value.sv\n                  }\n                  arr.push(val)\n                  arr.push(value.UnixTimestamp)\n                  tsResult.datapoints.push(arr)\n                })\n              }\n            }\n            tsResultArray.push(tsResult)\n          }\n          var result = {}\n          result.data = tsResultArray\n          resolve(result);\n\n        }))\n        .catch((error) => {\n          console.log(error);\n          reject(error)\n        })\n    })\n  }\n\n  testDatasource() {\n    const caller = this\n    return new Promise(function (resolve, reject) {\n      caller.getAllResourceUrlFromDevice(1)\n        .then((result) => {\n          caller.resourceList = result;\n          resolve({ status: \"success\", message: \"AppIoT data source is working. Connected with \" + caller.resourceList.length + \" resources.\", title: \"Success\" })\n        })\n        .catch((err) => {\n          console.log(err)\n          reject(err)\n        })\n    })\n\n\n    /*return this.doRequest({\n      url: this.url + '/',\n      method: 'GET',\n    }).then(response => {\n      if (response.status === 200) {\n        return { status: \"success\", message: \"Data source is working\", title: \"Success\" };\n      }\n    });*/\n  }\n\n  annotationQuery(options) {\n    const calleroption = options\n    const caller = this\n    return new Promise(function (resolve, reject) {\n      var eventcategoryname = calleroption.annotation.query //\"BLABHK_IoTServiceApp_Alert\" // need to put this to the configuration menu\n      let url = `${caller.appiot.apiURI}/events?filter[0].Key=EventCategoryName&filter[0].Value=${eventcategoryname}`\n      axios.get(url, { 'headers':caller.appiot.apiHeaders }) // todo get pagination\n        .then((result) => {\n          var arr = []\n          result.data.Rows.forEach((event)=>{\n            var time = new Date(event.CreatedDateTime).getTime()\n            var from = new Date(calleroption.range.from).getTime()\n            var to = new Date(calleroption.range.to).getTime()\n            if (time <= to && time >= from && event.EventCategoryName.toUpperCase() ==  calleroption.annotation.query.toUpperCase()) {\n              var ann = {}\n              ann.name = eventcategoryname\n              ann.enabled = true\n              ann.datasource = 'appiot datasource'\n              ann.showLine = true\n              var annotation = {}\n              annotation.annotation = calleroption.annotation\n              annotation.title = event.RuleName\n              annotation.time = time\n              annotation.text = 'created:' + event.CreatedDateTime + 'reset:' + event.ResetDateTime\n              annotation.tags = calleroption.annotation.query\n              arr.push(annotation)\n            }\n          })\n          resolve(arr)\n        })\n        .catch((err)=>{\n          console.log(err)\n          reject(err)\n        })\n      })\n          \n\n    /*var query = this.templateSrv.replace(options.annotation.query, {}, 'glob');\n    var annotationQuery = {\n      range: options.range,\n      annotation: {\n        name: options.annotation.name,\n        datasource: options.annotation.datasource,\n        enable: options.annotation.enable,\n        iconColor: options.annotation.iconColor,\n        query: query\n      },\n      rangeRaw: options.rangeRaw\n    };\n\n    return this.doRequest({\n      url: this.url + '/annotations',\n      method: 'POST',\n      data: annotationQuery\n    }).then(result => {\n      return result.data;\n    });\n    return [];*/\n  }\n\n  metricFindQuery(query) {\n    /* var interpolated = {\n         target: this.templateSrv.replace(query, null, 'regex')\n     };\n \n     return this.doRequest({\n       url: this.url + '/search',\n       data: interpolated,\n       method: 'POST',\n     }).then(this.mapToTextValue);*/\n\n       // generate random geolocation data\n       \n    const caller = this\n    console.log('here metricFindQuery')\n    return new Promise(function (resolve, reject) {\n      caller.getAllResourceUrlFromDevice(1)\n        .then((result) => {\n          caller.resourceList = result;\n          var list = []\n          caller.resourceList.forEach((resource) => {\n            list.push(resource.Name)\n            if(resource.Name == 'BleSensor'){\n              list.push(resource.Name + \", 5min TimeWeightedAverage\")\n              list.push(resource.Name + \", 5min Variance\")\n            }            \n          })\n          var result = {}\n          result.data = list\n          resolve(caller.mapToTextValue(result))\n        })\n        .catch((err) => {\n          console.log(err)\n          reject(err)\n        })\n\n    })\n\n  }\n\n  mapToTextValue(result) {\n    return _.map(result.data, (d, i) => {\n      if (d && d.text && d.value) {\n        return { text: d.text, value: d.value };\n      } else if (_.isObject(d)) {\n        return { text: d, value: i };\n      }\n      return { text: d, value: d };\n    });\n  }\n\n  doRequest(options) {\n    options.withCredentials = this.withCredentials;\n    options.headers = this.headers;\n\n    return this.backendSrv.datasourceRequest(options);\n  }\n\n  buildQueryParameters(options) {\n    //remove placeholder targets\n    options.targets = _.filter(options.targets, target => {\n      return target.target !== 'select metric';\n    });\n\n    var targets = _.map(options.targets, target => {\n      return {\n        target: this.templateSrv.replace(target.target, options.scopedVars, 'regex'),\n        refId: target.refId,\n        hide: target.hide,\n        type: target.type || 'timeserie'\n      };\n    });\n\n    options.targets = targets;\n\n    return options;\n  }\n}\n"]}